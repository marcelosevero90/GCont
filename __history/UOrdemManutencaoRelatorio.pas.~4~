unit UOrdemManutencaoRelatorio;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics,
  Controls, Forms, uniGUITypes, uniGUIAbstractClasses,
  uniGUIClasses, uniGUIFrame, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, uniGUIBaseClasses, uniImageList,
  uniPanel, uniRadioGroup, uniCheckBox, uniMultiItem, uniComboBox,
  uniDBComboBox, uniDBLookupComboBox, uniDateTimePicker, uniEdit, uniLabel,
  uniGroupBox, uniButton, uniBitBtn, uniToolBar, uniPageControl;

type
  TFOrdemManutencaoRelatorio = class(TUniFrame)
    pgMenu: TUniPageControl;
    tsLista: TUniTabSheet;
    UniToolBar1: TUniToolBar;
    UniToolButton3: TUniToolButton;
    UniToolButton1: TUniToolButton;
    btAtualizarDados: TUniBitBtn;
    UniGroupBox1: TUniGroupBox;
    UniLabel2: TUniLabel;
    UniLabel4: TUniLabel;
    edtCodIniFiltro: TUniNumberEdit;
    edtCodFimFiltro: TUniNumberEdit;
    edtDescFimFiltro: TUniEdit;
    edtDescIniFiltro: TUniEdit;
    dtImplIni: TUniDateTimePicker;
    dtImplFim: TUniDateTimePicker;
    dtConcIni: TUniDateTimePicker;
    dtConcFim: TUniDateTimePicker;
    UniLabel3: TUniLabel;
    UniLabel5: TUniLabel;
    lcMaqEquipFiltro: TUniDBLookupComboBox;
    lcEmitenteFiltro: TUniDBLookupComboBox;
    cbCliHabFiltro: TUniCheckBox;
    cbMaqHabFiltro: TUniCheckBox;
    rgSit: TUniRadioGroup;
    UniLabel6: TUniLabel;
    lcCondPag: TUniDBLookupComboBox;
    cbCondPag: TUniCheckBox;
    UniLabel7: TUniLabel;
    lcFormaPag: TUniDBLookupComboBox;
    cbFormaPag: TUniCheckBox;
    UniLabel8: TUniLabel;
    UniLabel9: TUniLabel;
    UniLabel10: TUniLabel;
    lcPortad: TUniDBLookupComboBox;
    cbPortad: TUniCheckBox;
    UniPanel1: TUniPanel;
    UniPanel2: TUniPanel;
    UniPanel3: TUniPanel;
    tsManut: TUniTabSheet;
    UniNativeImageList1: TUniNativeImageList;
    fdOrdManutDetalhe: TFDQuery;
    fdOrdManutDetalhecodEmpresa: TIntegerField;
    fdOrdManutDetalhecodEstabel: TIntegerField;
    fdOrdManutDetalhecodOrdemServico: TIntegerField;
    fdOrdManutDetalhedescricao: TStringField;
    fdOrdManutDetalheobservacao: TStringField;
    fdOrdManutDetalhetipoOrdem: TIntegerField;
    fdOrdManutDetalhedataImplantacao: TDateField;
    fdOrdManutDetalhevalorTotal: TBCDField;
    fdOrdManutDetalhesituacao: TIntegerField;
    fdOrdManutDetalhedataConclusao: TDateField;
    fdOrdManutDetalhecodOperador: TIntegerField;
    fdOrdManutDetalhecodEmitente: TIntegerField;
    fdOrdManutDetalhecodLocal: TStringField;
    fdOrdManutDetalhecodFormaPagto: TIntegerField;
    fdOrdManutDetalhecodCondPagto: TIntegerField;
    fdOrdManutDetalhetipoPreco: TIntegerField;
    fdOrdManutDetalhecodTabPreco: TIntegerField;
    fdOrdManutDetalhecodMaqEquip: TIntegerField;
    fdOrdManutDetalhemotivoCancelamento: TStringField;
    fdOrdManutDetalhedataCancelamento: TDateField;
    fdOrdManutDetalhemsgAlerta: TStringField;
    fdOrdManutDetalhecodUsuarImplant: TStringField;
    fdOrdManutDetalhecodUsuarCancelamento: TStringField;
    fdOrdManutDetalhecodNomeEmit: TStringField;
    fdOrdManutDetalhecodNomeOperador: TStringField;
    fdOrdManutDetalhecodNomeFormaPag: TStringField;
    fdOrdManutDetalhecodNomeCondPag: TStringField;
    fdOrdManutDetalhecodNomeTabPre: TStringField;
    fdOrdManutDetalhecodNomeMaqEquip: TStringField;
    fdOrdManutDetalhenomeCidade: TStringField;
    fdOrdManutDetalhecodPortador: TIntegerField;
    fdOrdManutDetalhecodUsuarConclusao: TStringField;
    fdOrdManutDetalhenomePortador: TStringField;
    fdEmitente: TFDQuery;
    fdEmitentecodEmpresa: TIntegerField;
    fdEmitentecodEstabel: TIntegerField;
    fdEmitentecodEmitente: TIntegerField;
    fdEmitentenomeEmitente: TStringField;
    fdEmitentecgc: TStringField;
    fdEmitentesituacao: TIntegerField;
    fdEmitenteidentificacao: TIntegerField;
    fdEmitenteemail: TStringField;
    fdEmitentetelefone: TStringField;
    fdEmitentecelular: TStringField;
    fdEmitentedataImplantacao: TDateField;
    dsEmitente: TDataSource;
    fdMaquinaEquipamento: TFDQuery;
    fdMaquinaEquipamentocodEmpresa: TIntegerField;
    fdMaquinaEquipamentocodEstabel: TIntegerField;
    fdMaquinaEquipamentocodMaqEquip: TIntegerField;
    fdMaquinaEquipamentonomeMaqEquip: TStringField;
    dsMaquinaEquipamento: TDataSource;
    fdFormaPagto: TFDQuery;
    fdFormaPagtocodEmpresa: TIntegerField;
    fdFormaPagtocodEstabel: TIntegerField;
    fdFormaPagtocodFormaPagto: TIntegerField;
    fdFormaPagtonomeFormaPagto: TStringField;
    dsFormaPagto: TDataSource;
    fdCondPagto: TFDQuery;
    fdCondPagtocodEmpresa: TIntegerField;
    fdCondPagtocodEstabel: TIntegerField;
    fdCondPagtocodCondPagto: TIntegerField;
    fdCondPagtonomeCondPagto: TStringField;
    fdCondPagtonumParcelas: TIntegerField;
    fdCondPagtotipoVencimento: TIntegerField;
    fdCondPagtonrDias: TIntegerField;
    dsCondPagto: TDataSource;
    fdPortador: TFDQuery;
    fdPortadorcodEmpresa: TIntegerField;
    fdPortadorcodEstabel: TIntegerField;
    fdPortadorcodPortador: TIntegerField;
    fdPortadornomePortador: TStringField;
    fdPortadorcodBanco: TIntegerField;
    fdPortadoragencia: TStringField;
    fdPortadorcontaCorrente: TStringField;
    fdPortadortipoPortador: TIntegerField;
    fdPortadorvlSaldoInicial: TBCDField;
    fdPortadorvlSaldoAtual: TBCDField;
    fdPortadorpercMultaAtraso: TBCDField;
    fdPortadorpercJuroDia: TBCDField;
    fdPortadorpercDesctoAntecip: TBCDField;
    dsPortador: TDataSource;
    procedure cbCliHabFiltroClick(Sender: TObject);
    procedure cbCondPagClick(Sender: TObject);
    procedure cbFormaPagClick(Sender: TObject);
    procedure cbMaqHabFiltroClick(Sender: TObject);
    procedure cbPortadClick(Sender: TObject);
    procedure UniFrameCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

implementation

{$R *.dfm}

uses Main;



procedure TFOrdemManutencaoRelatorio.cbCliHabFiltroClick(Sender: TObject);
begin
  if cbCliHabFiltro.Checked then
    lcEmitenteFiltro.Enabled := True
  else
    lcEmitenteFiltro.Enabled := False;
end;

procedure TFOrdemManutencaoRelatorio.cbCondPagClick(Sender: TObject);
begin
  if cbCondPag.Checked then
    lcCondPag.Enabled := True
  else
    lcCondPag.Enabled := False;
end;

procedure TFOrdemManutencaoRelatorio.cbFormaPagClick(Sender: TObject);
begin
  if cbFormaPag.Checked then
    lcFormaPag.Enabled := True
  else
    lcFormaPag.Enabled := False;
end;

procedure TFOrdemManutencaoRelatorio.cbMaqHabFiltroClick(Sender: TObject);
begin
  if cbMaqHabFiltro.Checked then
    lcMaqEquipFiltro.Enabled := True
  else
    lcMaqEquipFiltro.Enabled := False;
end;

procedure TFOrdemManutencaoRelatorio.cbPortadClick(Sender: TObject);
begin
  if cbPortad.Checked then
    lcPortad.Enabled := True
  else
    lcPortad.Enabled := False;
end;

procedure TFOrdemManutencaoRelatorio.UniFrameCreate(Sender: TObject);
begin
  dtImplIni.DateTime := Date - 90;
  dtImplFim.DateTime := Date;
  dtConcIni.DateTime := Date - 90;
  dtConcFim.DateTime := Date;


  fdEmitente.Close;
  fdEmitente.SQL.Clear;
  fdEmitente.SQL.Add( ' select * from gcEmitente '
                      + ' where codEmpresa  = ' + IntToStr(MainForm.iCodEmpresa)
                      + '   and codEstabel  = ' + IntToStr(MainForm.iCodEstabel));
  fdEmitente.Active := True;


  fdMaquinaEquipamento.Close;
  fdMaquinaEquipamento.SQL.Clear;
  fdMaquinaEquipamento.SQL.Add( ' select * from gcMaquinaEquipamento '
                            + ' where codEmpresa  = ' + IntToStr(MainForm.iCodEmpresa)
                            + '   and codEstabel  = ' + IntToStr(MainForm.iCodEstabel));
  fdMaquinaEquipamento.Active := True;

  fdFormaPagto.Close;
  fdFormaPagto.SQL.Clear;
  fdFormaPagto.SQL.Add( ' select * from  gcFormaPagamento '
                      + ' where codEmpresa  = ' + IntToStr(MainForm.iCodEmpresa)
                      + '   and codEstabel  = ' + IntToStr(MainForm.iCodEstabel));
  fdFormaPagto.Active := True;

  fdCondPagto.Close;
  fdCondPagto.SQL.Clear;
  fdCondPagto.SQL.Add( ' select * from  gcCondicaoPagamento '
                     + ' where codEmpresa  = ' + IntToStr(MainForm.iCodEmpresa)
                     + '   and codEstabel  = ' + IntToStr(MainForm.iCodEstabel));
  fdCondPagto.Active := True;


  fdPortador.Close;
  fdPortador.SQL.Clear;
  fdPortador.SQL.Add( ' select * from  gcPortador '
                     + ' where codEmpresa  = ' + IntToStr(MainForm.iCodEmpresa)
                     + '   and codEstabel  = ' + IntToStr(MainForm.iCodEstabel));
  fdPortador.Active := True;
end;

end.
