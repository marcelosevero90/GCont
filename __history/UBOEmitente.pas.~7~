unit UBOEmitente;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics,
  Controls, Forms, System.IniFiles, IdHTTP,
  FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client,  JSon;

  function fBOEmitente_ValidaPostDelete(dsRegistros : TDataSet; sAcao : string ) : string;


implementation

uses Main, MainModule;

function fBOEmitente_ValidaPostDelete(dsRegistros : TDataSet; sAcao : string ) : string;
var
  fqFKTab : TFDQuery;
begin
  Result := '';
  try

    fqFKTab := TFDQuery.Create(nil);
    fqFKTab.Connection := UniMainModule.conexaoDB;
    fqFKTab.Close;

    try

      if dsRegistros.IsEmpty then begin
        Result := Result + 'Não foram encontrados registros para manutenção! |';
        Exit;
      end;

      if sAcao = 'DELETE' then begin

        fqFKTab.Close;
        fqFKTab.SQL.Clear;
        fqFKTab.SQL.Add(' select codEmitente from gcEmitenteEndereco ' +
                        ' where codEmpresa = ' + IntToStr(MainForm.iCodEmpresa) +
                        '   and codEstabel = ' + IntToStr(MainForm.iCodEstabel) +
                        '   and codEmitente   = ' + IntToStr(dsRegistros.FieldByName('codEmitente').AsInteger)
                        );
        fqFKTab.Active := True;
        if not fqFKTab.IsEmpty then begin
          Result := Result + 'Emitente  ' + dsRegistros.FieldByName('codEmitente').AsString + ' vinculado a um endereço, não pode ser eliminado! |';
        end;

        fqFKTab.Close;
        fqFKTab.SQL.Clear;
        fqFKTab.SQL.Add(' select codEmitente from gcEmitenteContasBancaria ' +
                        ' where codEmpresa = ' + IntToStr(MainForm.iCodEmpresa) +
                        '   and codEstabel = ' + IntToStr(MainForm.iCodEstabel) +
                        '   and codEmitente   = ' + IntToStr(dsRegistros.FieldByName('codEmitente').AsInteger)
                        );
        fqFKTab.Active := True;
        if not fqFKTab.IsEmpty then begin
          Result := Result + 'Emitente  ' + dsRegistros.FieldByName('codEmitente').AsString + ' vinculado com conta bancária, não pode ser eliminado! |';
        end;


      end
      else begin

        if dsRegistros.State = dsInsert then begin

          if (dsRegistros.FieldByName('codEmitente').AsInteger = 0 ) or
             (dsRegistros.FieldByName('codEmitente').IsNull)         then begin
            Result := Result + 'Código do Emitente deve ser informado! |';
          end;

          fqFKTab.Close;
          fqFKTab.SQL.Clear;
          fqFKTab.SQL.Add(' select codEmitente from gcEmitente ' +
                          ' where codEmpresa = ' + IntToStr(MainForm.iCodEmpresa) +
                          '   and codEstabel = ' + IntToStr(MainForm.iCodEstabel) +
                          '   and codEmitente   = ' + IntToStr(dsRegistros.FieldByName('codEmitente').AsInteger)
                          );
          fqFKTab.Active := True;
          if not fqFKTab.IsEmpty then begin
            Result := Result + 'Código ' + dsRegistros.FieldByName('codEmitente').AsString + ' já está cadastrado! |';
          end;
        end;
        if (dsRegistros.FieldByName('nomeEmitente').AsString = '' ) or
           (dsRegistros.FieldByName('nomeEmitente').IsNull)         then begin
          Result := Result + 'Nome deve ser informado! |';
        end;

        if (dsRegistros.FieldByName('cgc').AsString = '' ) or
           (dsRegistros.FieldByName('cgc').IsNull)         then begin
          Result := Result + 'CGC deve ser informado! |';
        end;
        if (dsRegistros.FieldByName('email').AsString = '' ) or
           (dsRegistros.FieldByName('email').IsNull)         then begin
          Result := Result + 'EMail deve ser informado! |';
        end;
        if (dsRegistros.FieldByName('situacao').AsInteger = 0 ) or
           (dsRegistros.FieldByName('situacao').IsNull)         then begin
          Result := Result + 'Situação deve ser informada! |';
        end;


        fqFKTab.Close;
        fqFKTab.SQL.Clear;
        fqFKTab.SQL.Add(' select codOperador from gcOperadorMaqEquip ' +
                        ' where codEmpresa = ' + IntToStr(MainForm.iCodEmpresa) +
                        '   and codEstabel = ' + IntToStr(MainForm.iCodEstabel) +
                        '   and codOperador   = ' + IntToStr(dsRegistros.FieldByName('codOperador').AsInteger)
                        );
        fqFKTab.Active := True;
        if not fqFKTab.IsEmpty then begin
          Result := Result + 'Operador inforado ' + dsRegistros.FieldByName('codOperador').AsString + ' não encontrado! |';
        end;
        fqFKTab.Close;
        fqFKTab.SQL.Clear;
        fqFKTab.SQL.Add(' select codEmitente from gcEmitente ' +
                        ' where codEmpresa = ' + IntToStr(MainForm.iCodEmpresa) +
                        '   and codEstabel = ' + IntToStr(MainForm.iCodEstabel) +
                        '   and codEmitente   = ' + IntToStr(dsRegistros.FieldByName('codEmitente').AsInteger)
                        );
        fqFKTab.Active := True;
        if not fqFKTab.IsEmpty then begin
          Result := Result + 'Emitente inforado ' + dsRegistros.FieldByName('codEmitente').AsString + ' não encontrado! |';
        end;

        fqFKTab.Close;
        fqFKTab.SQL.Clear;
        fqFKTab.SQL.Add(' select codEmitente, codLocal from gcEmitenteEndereco ' +
                        ' where codEmpresa = ' + IntToStr(MainForm.iCodEmpresa) +
                        '   and codEstabel = ' + IntToStr(MainForm.iCodEstabel) +
                        '   and codEmitente   = ' + IntToStr(dsRegistros.FieldByName('codEmitente').AsInteger)   +
                        '   and codLocal   = ' + QuotedStr(dsRegistros.FieldByName('codLocal').AsString)
                        );
        fqFKTab.Active := True;
        if not fqFKTab.IsEmpty then begin
          Result := Result + 'Emitente/Local inforado ' + dsRegistros.FieldByName('codEmitente').AsString + '/' + dsRegistros.FieldByName('codLocal').AsString + ' não encontrado! |';
        end;

        fqFKTab.Close;
        fqFKTab.SQL.Clear;
        fqFKTab.SQL.Add(' select codMaqEquip from gcMaquinaEquipamento ' +
                        ' where codEmpresa = ' + IntToStr(MainForm.iCodEmpresa) +
                        '   and codEstabel = ' + IntToStr(MainForm.iCodEstabel) +
                        '   and codMaqEquip   = ' + IntToStr(dsRegistros.FieldByName('codMaqEquip').AsInteger)
                        );
        fqFKTab.Active := True;
        if not fqFKTab.IsEmpty then begin
          Result := Result + 'Máquina/Equip inforado ' + dsRegistros.FieldByName('codMaqEquip').AsString + ' não encontrado! |';
        end;



      end;

      if Result = '' then
        Result := 'OK';

    except
      on e : exception do begin
        Result := 'Erro ao gravar registro: ' + e.message;
      end;
    end;
  finally
    FreeAndNil(fqFKTab);
  end;


end;






end.
